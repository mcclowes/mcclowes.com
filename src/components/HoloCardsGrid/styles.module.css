.wrapper {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 12px;
}

.controls {
  margin-top: 6px;
}

.toggle {
  margin: 8px 0 16px 0;
  padding: 8px 16px;
  background: #333;
  color: #fff;
  border: none;
  border-radius: 6px;
  cursor: pointer;
}

.grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
  gap: 16px;
  width: 100%;
}

.item {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 6px;
}

.caption {
  color: #ccc;
  font-size: 0.9rem;
}

.card {
  --w: 240px;
  --h: 336px;
  --r: 14px;
  --mx: 50%;
  --my: 50%;
  --rx: 0deg;
  --ry: 0deg;
  --tilt: 12deg;

  position: relative;
  width: var(--w);
  height: var(--h);
  border-radius: var(--r);
  transform-style: preserve-3d;
  transform: rotateX(var(--rx)) rotateY(var(--ry));
  transition: transform 80ms linear;
  overflow: hidden;
  background: #0f1118;
  box-shadow:
    0 12px 30px rgba(0,0,0,.6),
    0 2px 6px rgba(0,0,0,.7) inset;
  isolation: isolate;
  cursor: pointer;
  /* Allow panning/zooming without blocking our pointer events; enables smooth touch move */
  touch-action: none;
}

.art {
  position: absolute;
  inset: 0;
  display: grid;
  place-items: center;
  transform: translateZ(1px);
}

.art img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  display: block;
  user-select: none;
  pointer-events: none;
}

.foil {
  position: absolute;
  inset: 0;
  pointer-events: none;
  mix-blend-mode: color-dodge;
  opacity: 1.2;
  background:
    radial-gradient(120px 120px at 20% 30%, rgba(255,255,255,.4), transparent 60%),
    radial-gradient(160px 160px at 80% 70%, rgba(255,255,255,.35), transparent 60%),
    repeating-linear-gradient(0deg, rgba(255,255,255,.04) 0 2px, transparent 2px 4px),
    conic-gradient(
      from var(--angle, 0deg),
      #ff0040, #ff7a00, #ffd400, #4cff00, #00edff, #3b4dff, #b600ff, #ff0040
    );
  background-blend-mode: screen, screen, soft-light, normal;
  filter: saturate(1) brightness(1.1);
  animation: twinkle 6s linear infinite;
  transform: translateZ(2px);

  -webkit-mask-size: cover;
  -webkit-mask-position: center;
  -webkit-mask-repeat: no-repeat;
  /* removed origin/clip to avoid potential offsets across browsers */
  -webkit-mask-mode: luminance;

  mask-size: cover;
  mask-position: center;
  mask-repeat: no-repeat;
  mask-mode: luminance;
}

@supports not (mask-mode: luminance) {
  .foil {
    -webkit-mask: none;
    mask: none;
    opacity: 1.0;
  }
}

.refinedAlpha {
  -webkit-mask-mode: alpha;
  mask-mode: alpha;
  opacity: 1.1;
  mix-blend-mode: soft-light;
  filter: saturate(1.2) brightness(1.05) contrast(1.1);
}

.alphaMode {
  -webkit-mask-mode: alpha;
  mask-mode: alpha;
  opacity: 1;
  mix-blend-mode: color-dodge;
  filter: saturate(2) brightness(.4);
}

.noMask {
  -webkit-mask-image: none !important;
  mask-image: none !important;
  opacity: 0.40;
  mix-blend-mode: color-dodge;
  filter: saturate(1) brightness(1.1);
}

.luminanceMode {
  -webkit-mask-mode: luminance;
  mask-mode: luminance;
  opacity: 0.9;
  mix-blend-mode: color-dodge;
  filter: saturate(1) brightness(1.1);
}

@keyframes twinkle {
  0% { background-position: 0px 0px, 0px 0px, 0 0, 0 0; }
  100% { background-position: 40px 0px, -60px 0px, 0 20px, 0 0; }
}

.shine {
  position: absolute;
  inset: 0;
  pointer-events: none;
  background: radial-gradient(140px 140px at var(--mx) var(--my), rgba(255,255,255,.55), rgba(255,255,255,.05) 45%, transparent 60%);
  mix-blend-mode: screen;
  transform: translateZ(3px);
}

.overlay {
  position: absolute;
  inset: 0;
  object-fit: cover;
  pointer-events: none;
  transform: translateZ(4px);
  height: 100%;
  width: 100%;
  object-position: top center;
}

:global(.theme-doc-markdown) .grid,
:global(.markdown) .grid {
  /* Ensure grid spans container width inside MDX */
  width: 100%;
} 